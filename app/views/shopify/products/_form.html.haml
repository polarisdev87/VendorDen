= form_for product, url: form_url, html: {'id' => form_html_id} do |f|


  .form-group{'class' => "#{f.object.errors[:vendor].present? ? 'has-error' : ''}"}
    = f.label :vendor_id, 'Vendor', 'class' => ''
    = f.select :vendor_id, current_shop.vendors.all.map { |vendor| [vendor.business_name, vendor.id] }, {}, 'class' => 'form-control', required: true
    - if f.object.errors[:vendor].present?
      %span.help-block= f.object.errors[:vendor].join(', ')


  .form-group{'class' => "#{f.object.errors[:title].present? ? 'has-error' : ''}"}
    = f.label :title, 'Title', 'class' => ''
    = f.text_field :title, 'class' => 'form-control', required: true
    - if f.object.errors[:title].present?
      %span.help-block= f.object.errors[:title].join(', ')


  .form-group{'class' => "#{f.object.errors[:cost_of_goods].present? ? 'has-error' : ''}"}
    = f.label :cost_of_goods, 'Cost of Goods', 'class' => ''
    .input-group
      = f.number_field :cost_of_goods, 'class' => 'form-control'
      %span.input-group-addon
        USD
    %span.help-block
      this value will be the basis of commision splitting among the vendors.
    - if f.object.errors[:cost_of_goods].present?
      %span.help-block= f.object.errors[:cost_of_goods].join(', ')

  .checkbox
    %label
      = f.check_box :is_bookable
      Is Bookable?
    %span.help-block
      Checking this field will allow a product to have a start and end date booking option.

  #product_timeslots_section.form-group
    .list-group
      - if current_shop.time_slots.unbooked.any? || product.time_slots.any?
        - ([product.time_slots, current_shop.time_slots.unbooked].flatten.uniq).each do |time_slot|
          .list-group-item
            = f.check_box :time_slot_ids, { multiple: true }, time_slot.id
            = label_tag time_slot.display
      - else
        %p All TimeSlots are already assigned. Create a new timeslot.


  
  %label Amount that you will keep - the rest goes to the vendor
  .form-group{'class' => "#{f.object.errors[:minimum_commission_per_product].present? ? 'has-error' : ''}"}
    .row
      .col-md-2
        = f.number_field :minimum_commission_per_product, placeholder: '0', 'class' => 'form-control', 'style' => 'width:100%; text-align: right;', 'required' => 'true'
        - if f.object.errors[:minimum_commission_per_product].present?
          %span.help-block= f.object.errors[:minimum_commission_per_product].join(', ')
      .col-md-10
        = f.select :commission_structure_type, [['USD per product or time schedule booking', '$'], ['% per product or time schedule booking', '%']], {}, 'class' => 'form-control', 'style' => 'width:100%;'


  - if local_assigns[:show_submit]
    .form-commands
      = f.submit 'Save', 'class' => 'btn btn-primary'

- content_for :extra_javascript do
  :javascript
    (function() {
      $(function() {
      console.log('hello');
        $('#product_is_bookable').change(function(e) {
          e.stopPropagation();
          e.preventDefault();
          var checked = $(this).prop('checked');
          if (checked) {
            $('#product_timeslots_section').show();
          } else {
            $('#product_timeslots_section').hide();
          }
        });
        $('#product_is_bookable').change();
      });
    })();
